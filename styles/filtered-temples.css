/* Use your own color schema */
/* Use your own typography choice by using the Google Fonts API service to select one or two fonts to use on the page. */
/* Use CSS Flex on the navigation nav. */
/* The navigation must employ a hover affect. */
/* The main element has a limited width and is centered on the screen horizontally. */
/* Consider using the max-width property to limit the width and margin property to center the main element on the screen. */
/* Layout the main column figure elements using CSS Grid. In the mobile view, there should only be one (1) column. */
/* Your design must support a responsive view in mobile and larger views. */

/* This CSS Rule should be default for probably all CSS files */
* {
    /* box size, space and placement*/
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    /* style (border-color-font)*/
    font-family: "Lato", sans-serif;
    font-size: 16px;
    font-weight: 400;
    
}

header, main, footer { /*should I have main here too?*/
    /* box size, space and placement*/
    /* max-width: 700px; */
    max-width: 900px;
    margin: 0 auto;
    padding: 1rem;
    /* style (border-color-font) */
    /* border: 3px solid black; */
    background-color: rgba(9, 144, 248, 0);

}

 /* HEADER - child(h1), child(button?), child(nav)--------------- */
header {
    /* box size, space and placement*/
    display: grid;
    grid-gap: 1rem;
    padding: 20px;
    /* style (border-color-font)*/
    border: 1px solid black;    
    background-color: rgb(2, 56, 97);
    color: #eee;
    box-shadow: 0 0 30px #333;
}

h1 {
    /* box size, space and placement*/
    text-align: left;
    /* style (border-color-font)*/
    font-size: 2rem;
}

/* HAMBURGER Button - menu */
#menu {
    /* box size, space and placement*/
    position: absolute;
    top: 1.5rem;
    right: 1rem;
    /* style (border-color-font)*/
    border: 0;
    background: none;
    font-size: 1.5rem;
}

#menu::before {
    content: '☰';
}

#menu.open::before {
	content: "❌";
}

/* NAVIGATION----------------------------------------------- */

nav {
    /* box size, space and placement*/
    /* margin: 1rem auto; */
    /* style (border-color-font)*/
    background-color: hsla(204, 72%, 23%, 0.89);
}

.navigation {
    /* box size, space and placement*/
    display: flex;
    flex-direction: column; /*this is for mobile viewing to have the list stacked like a hamburger*/ 
    justify-content: space-around;
    /* style (border-color-font)*/
    background-color: #333;
    color: #fff;    
    list-style: none;
}

.navigation a {
    /* box size, space and placement*/
    display: none; /*it needs to be none instead of block for mobile*/
    padding: 1rem;
    text-align: center;
    /* style (border-color-font)*/
    color: #fff;
    font-size: larger;
    text-decoration: none;
}

.navigation a:hover {
    /* style (border-color-font)*/
    background-color: #eee;
    color: #000;
    font-weight: bolder;
    text-decoration: underline;
}

/* does this even exist? */
.navigation.open a {
    display: block;
}


/* End NAVIGATION Section----------------- */
/* End HEADER Section------------------------------------------ */



/* MAIN - child(h2), child(div- does .templesContainer count?--------- */
/* Not sure if I need a main {} here for margin/padding/max-width? */

h2 {
    font-size: 2rem;
    padding: 1rem;
    text-align: center;
}

/* DIV id="templeContainer"- child(figure) times 10------------- */
#templesContainer {
    /* Layout the main column figure elements using CSS Grid. 
    There should only be 1 column for mobile view*/
    /* box size, space and placement*/
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    /* 250px is a good px for smaller screens */
    /* auto-fit, minmax(250px, 1fr) → Ensures a responsive grid that adjusts based on available space. */
    /* On mobile, it will stack into a single column. */
    /* On larger screens, it expands into multiple columns automatically. */
    gap: 1rem;
    padding: 1rem;
    place-items: center;
    /* style (border-color-font)*/

}

section {
    box-sizing: border-box; /* Ensures padding and border don't affect the width */
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    padding: 1rem;
    min-width: 300px;
    /* min-width: 0;  Prevents overflow by allowing it to shrink */
    /* width: max-content;  /* Ensures container only grows as needed */
    max-width: 100%;   /* Prevents overflowing on small screens */
    width: 100%;  /*Ensures full width on small screens*/
    flex-wrap: wrap;      /* Allows wrapping on smaller screens */
    border: 1px solid black;
    background-color: rgba(87, 97, 104, 0.192);
    color:  rgb(2, 56, 97);
/* ***the min-width seemed to really help my section card to not have a <p> overflow */
}


.label {
    color:  rgb(0, 4, 7);
    font-weight: bold;
    
}
section p {
    /* padding-right: 10px; */
    max-width: 100%;
    white-space: nowrap;   
    font-size: clamp(14px, 2vw, 18px); /* Makes text size responsive */
}

section img {
    display: flex;
    /* box size, space and placement*/
    /* width:  auto; */
    /* max-width: 100%; /*     Makes sure image resizes if needed */
    /* width: 100%; */
    /* max-width: 400px; /*Prevents it from exceeding natural size */
    /* height: auto; */
    /* object-fit: cover;  */
    width: 280px;
    min-height: 157.5px;
    height: auto;
    /* style (border-color-font)*/
    box-shadow: 0 0 30px gray;
}


/* FOOTER - child(p), child(p)----------------------------------- */
footer {
    /* box size, space and placement*/
    text-align: center;
    /* style (border-color-font)*/
    border: 1px solid black;    
    background-color: rgb(2, 56, 97);
    color: #eee;
}

footer p {
    text-align: center;
}

#lastModified {
    /* style (border-color-font)*/
    color: #eee;
    font-size: 1rem;
}
