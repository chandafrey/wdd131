*{
    margin: 0;
    padding: 0;
}

body {
    /* Start here with the parent container and say display: grid; */
    display: grid;
    grid-template:auto 1fr auto / auto 1fr auto;
    height: 75vh;
    margin: 2rem;
    font-family: acme, Arial, sans-serif;
    color: black;
}
header {
    /* Don't forget if you want to span left to right say grid-column: */
    grid-column: 1/4;
    background-color: rgb(57, 55, 55);
    /* padding: 2rem; */

}

h1 {
    color: white;
    font-size: medium;
    padding: 1rem;
    
}
nav {
    margin: 0 auto 2rem;
    max-width: 90vw;
}

main {
    grid-column: 1/3;
    /* margin: 1rem; */
    border: 1px solid rgb(0 0 0 /.2);
    padding: 1rem;
    background-color: rgb(91, 89, 89);
    color: black;
}


/* Follow this link for Mdn web docs on Flexboxes! */
/* https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/CSS_layout/Flexbox */

/* Make the <ul> the parent container and display: flex; */
/* The <ul> flex container is displayed as Block-level 
content in terms of how it interacts with the rest of the page */
/*By default, flex-direction is set to row, or you can change it to column...
flex-direction: column (each item stacked on top of each other)*/
/* You can also set flex-direction:row-reverse or column-reverse */
nav ul { 
    background-color: rgb(190, 170, 170);
    display: flex;
    /* align-items: center;   We probably don't need this here, but
    This will center up and down in this space 
    since everthing is set to running left to right in a row.*/
    
    justify-content: space-around; /*this will center elements with 
    Space Around from left to right when flex is row */
    /* can also justify-content: a handful of other choices */
    
    font-size: 18px;
} 

.navigation {
    list-style: none; /*This takes away the bullets */
    display: flex;
    flex-wrap: wrap;
    padding: .5rem;
    background-color: rgb(128, 85, 85);
    align-items: center;
}

.navigation li {
    flex: 1 1 auto;
    
}

.navigation a {
    display: block;
    color: #eee;
    padding: .75rem;
    text-decoration: none;
    text-align: center;
}

.navigation a:hover { /*Everything here is going to change the way the element a looks when on hover*/
    font-weight: 700;
    text-decoration: underline;
    text-decoration-color: yellow; /*This will make only the decoration(underline) change on hover*/
    color: blue; /*This will make only the text change color on hover...*/
}

h2 {
    background-color: cadetblue;
}

aside {
    grid-column: 3/4;
    padding: 1rem;
    background-color: rgb(128, 85, 85);
    color: black;
}

footer {
    grid-column: 1/4;
    text-align: center;
    padding: 3rem;
    background-color: rgb(56, 55, 55);
    color: white;
}
